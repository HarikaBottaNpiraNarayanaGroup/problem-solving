Question 3
Write a function that takes in an array of at least two integers and that return an array  of the starting and ending indices of the smallest subarray in the input array that needs to be sorted in place in order for the entire input array to be sorted(in ascending order).
if the input array is already sorted, the function should return [-1,-1].

sample input :
def printUnsorted(arr, n):
	e = n-1
	#finding starting unordered element
	for s in range(0,n-1):
		if arr[s] > arr[s+1]:
			break
	#if list in sorted order 	
	if s == n-1:
		print ("[-1,-1]")
		exit()

	# finding ending unordered element
	e= n-1
	while e > 0:
		if arr[e] < arr[e-1]:
			break
		e -= 1

	# finding minimul ele and maximum ele in b/w starting and ending ele
	max = arr[s]
	min = arr[s]
	for i in range(s+1,e+1):
		if arr[i] > max:
			max = arr[i]
		if arr[i] < min:
			min = arr[i]

	# finding manimal ele in first sub list
	for i in range(s):
		if arr[i] > min:
			s = i
			break

	# finding maximal ele in last sub list
	i = n-1
	while i >= e+1:
		if arr[i] < max:
			e = i
			break
		i -= 1

	# printing starting and ending elements
	print ("[",s,",",e,"]")

arr = [1, 2, 4, 7, 10, 11, 7, 12, 6, 7, 16, 18, 19]
arr_size = len(arr)
printUnsorted(arr, arr_size)

user Output:
[ 3 , 9 ]

Above code Time Complexity : O(n)
  
